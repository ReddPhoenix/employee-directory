{"version":3,"sources":["components/Header.jsx","components/Sort.jsx","components/Employee.jsx","App.js","index.js"],"names":["Header","className","useSortableData","employees","config","React","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","Employee","props","value","setValue","getClassNamesFor","name","undefined","type","onChange","e","target","placeholder","class","onClick","filter","item","title","toLowerCase","includes","first_name","last_name","email","phone","map","emp","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd573f65.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <container>\r\n            <section className='hero is-small is-info is-bold'>\r\n                <div className='hero-body'>\r\n                    <div className='container'>\r\n                        <h1 className='title'>Employee Directory</h1>\r\n                        <h2 className='subtitle'>Search or sort through the employee directory</h2>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </container>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst useSortableData = (employees, config = null) => {\r\n    const [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n    const sortedItems = React.useMemo(() => {\r\n        let sortableItems = [...employees];\r\n        if (sortConfig !== null) {\r\n            sortableItems.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        \r\n        return sortableItems;\r\n    }, [employees, sortConfig]);\r\n\r\n    const requestSort = (key) => {\r\n        let direction = 'ascending';\r\n        if (\r\n            sortConfig &&\r\n            sortConfig.key === key &&\r\n            sortConfig.direction === 'ascending'\r\n        ) {\r\n            direction = 'descending';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    return { employees: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nexport default useSortableData;\r\n","import useSortableData from './Sort';\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nconst Employee = (props) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const { employees, requestSort, sortConfig } = useSortableData(props.employees);\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    };\r\n    return (\r\n        \r\n        <table className='table  is-striped is-hoverable is-fullwidth'>\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        <div className='control has-icons-right'>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={value}\r\n                                onChange={e => setValue(e.target.value)}\r\n                                placeholder='Search...'\r\n                                className='input is-rounded'\r\n                            />\r\n                            <span className='icon is-small is-right'>\r\n                                <i class=\"fa fa-search\"></i>\r\n                            </span>\r\n                        </div>\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th>\r\n                        {/* sort by first name button */}\r\n                        <div className='has-icons-right'>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => requestSort('first_name')}\r\n                                className={getClassNamesFor('first_name')}\r\n\r\n                            >First Name\r\n                                <span className='icon is-small is-right'>\r\n                                    <i className=\"fa fa-sort\"></i>\r\n                                </span>\r\n                            </button>\r\n                        </div>\r\n                    </th>\r\n\r\n                    {/* sort by last name button */}\r\n                    <th>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => requestSort('last_name')}\r\n                            className={getClassNamesFor('last_name')}\r\n                        >Last Name\r\n                        <span className='icon is-small is-right'>\r\n                                <i className=\"fa fa-sort\"></i>\r\n                            </span></button>\r\n                    </th>\r\n\r\n                    {/* sort by job title button */}\r\n                    <th>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => requestSort('title')}\r\n                            className={getClassNamesFor('title')}\r\n                        >Title\r\n                        <span className='icon is-small is-right'>\r\n                                <i className=\"fa fa-sort\"></i>\r\n                            </span></button>\r\n                    </th>\r\n\r\n                    {/* sort by employee email button */}\r\n                    <th>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => requestSort('email')}\r\n                            className={getClassNamesFor('email')}\r\n                        >Email\r\n                        <span className='icon is-small is-right'>\r\n                                <i className=\"fa fa-sort\"></i>\r\n                            </span></button>\r\n                    </th>\r\n\r\n                    {/* sort by employee phone button */}\r\n                    <th>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => requestSort('phone')}\r\n                            className={getClassNamesFor('phone')}\r\n                        >Phone Number\r\n                        <span className='icon is-small is-right'>\r\n                                <i className=\"fa fa-sort\"></i>\r\n                            </span></button>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {/* map employee list and display */}\r\n                {employees.filter(item => {\r\n                    if (!value) return true;\r\n                    // filter employees based on user input across all column headings\r\n                    if (item.title.toLowerCase().includes(value.toLowerCase())\r\n                        || item.first_name.toLowerCase().includes(value.toLowerCase())\r\n                        || item.last_name.toLowerCase().includes(value.toLowerCase())\r\n                        || item.email.toLowerCase().includes(value.toLowerCase())\r\n                        || item.phone.toLowerCase().includes(value.toLowerCase())\r\n                    ) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                })\r\n                    .map((emp) => (\r\n                        <tr key={emp.id}>\r\n                            <td>{emp.first_name}</td>\r\n                            <td>{emp.last_name}</td>\r\n                            <td>{emp.title}</td>\r\n                            <td>{emp.email}</td>\r\n                            <td>{emp.phone}</td>\r\n                        </tr>\r\n\r\n\r\n                    ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Employee;","import React from 'react';\r\nimport Header from './components/Header.jsx';\r\n// import Filter from './components/Filter.jsx';\r\nimport Employee from './components/Employee.jsx';\r\nimport employees from './data/Employees.json';\r\n\r\nexport default function App() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {/* <Filter /> */}\r\n            <Employee employees={employees} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}